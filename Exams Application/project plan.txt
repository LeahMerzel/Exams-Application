api controller => crudRepo=> EF Db => WPF / wwwroot (React?) JS
MVC


crud operations:

admin:
public User? GetAccountById(int id()?{}
public List<User> getAllAcounts(){}
public bool deleteAccount(int userId){}
public User createAccount(User user){}

account:
public User createAccount(User user){}
public User updateAccountDetails(int userId){}
public bool deleteAccount(int userId){}
public User login(string username, string password){}
public bool logout(int userId){}

teacher:
public Exam createExam(Exam exam){}
public List<Exam> getAllExams(int teacherId){}
public Exam updateExam(int examId){}
public bool deleteExam(int examId){}
public Question createQuestion(Question question){}
public List<Question> getAllQuestion(int examId){}
public Question updateQuestion(int questionId){}
public bool deleteQuestion(int questionId){}
public StudentExam gradeExamPerStudent(int studentExamId){}
(public Exam GetExamStatistic(){}/) public double GetExamGradeStatistic(){}
------------------------
public Exam SaveLocalyUntilServerUpload(Exam exam){}// save to local storage on client side untill:
public Exam UploadExamToServer(){} ajax POST request to server side with CreateExam() 
//change UpdateExam() that can only if no student logged in to exam


student:
public Exam GetExamById(){}
public string loginToExam(int examId){}
public bool submitExam(int examId){}
public List<StudentExam> getAllExamsTaken(int studentId){}
//student gets exam, submits exam to teacher with studentId, teacher updates grade in student db, student can get grade
------------------------
//change LoginToExam() that can only according to DateTime



12/12/2023

1. create DTO models as needed
2. use async Task<IActionResult<Something>> methods in conrollers (only?)
3. make EF work
4. create DbContext instance at the begining of repo
5. check that all methods work and are written well
6. create generic repo and inherit - can it contain Login() Logout() too?
7. want to use deligates and events, when a teacher publishes an exam the student (-subscriber) gets it
8. and IOFiles, a student can print certain stuff
